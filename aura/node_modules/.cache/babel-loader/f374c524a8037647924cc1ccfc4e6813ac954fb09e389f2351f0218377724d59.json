{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\11am-grp1-repo\\\\aura\\\\src\\\\components\\\\SettingsModal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport '../pages/styles/profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsModal = () => {\n  _s();\n  useEffect(() => {\n    const settingsModal = document.getElementById(\"settingsModal\");\n    const gearIcon = document.querySelector(\".fa-gear\");\n    const closeSettingsBtn = document.querySelector(\".close-settings\");\n    const saveSettingsBtn = document.querySelector(\".save-settings\");\n\n    // Open modal when gear icon is clicked\n    if (gearIcon) {\n      gearIcon.addEventListener(\"click\", () => {\n        settingsModal.style.display = \"flex\";\n      });\n    }\n\n    // Close modal when close button is clicked\n    if (closeSettingsBtn) {\n      closeSettingsBtn.addEventListener(\"click\", () => {\n        settingsModal.style.display = \"none\";\n      });\n    }\n\n    // Close modal when clicking outside\n    window.addEventListener(\"click\", e => {\n      if (e.target === settingsModal) {\n        settingsModal.style.display = \"none\";\n      }\n    });\n\n    // Save settings\n    if (saveSettingsBtn) {\n      saveSettingsBtn.addEventListener(\"click\", () => {\n        const notifications = document.getElementById(\"notifications\").checked;\n        const darkMode = document.getElementById(\"darkMode\").checked;\n        const language = document.getElementById(\"language\").value;\n        console.log(\"Settings saved:\");\n        console.log(\"Notifications: \" + notifications);\n        console.log(\"Dark Mode: \" + darkMode);\n        console.log(\"Language: \" + language);\n        settingsModal.style.display = \"none\";\n      });\n    }\n\n    // Cleanup event listeners when the component unmounts\n    return () => {\n      if (gearIcon) gearIcon.removeEventListener(\"click\", () => settingsModal.style.display = \"flex\");\n      if (closeSettingsBtn) closeSettingsBtn.removeEventListener(\"click\", () => settingsModal.style.display = \"none\");\n      window.removeEventListener(\"click\", e => {\n        if (e.target === settingsModal) {\n          settingsModal.style.display = \"none\";\n        }\n      });\n      if (saveSettingsBtn) saveSettingsBtn.removeEventListener(\"click\", () => {\n        const notifications = document.getElementById(\"notifications\").checked;\n        const darkMode = document.getElementById(\"darkMode\").checked;\n        const language = document.getElementById(\"language\").value;\n        console.log(\"Settings saved:\");\n        console.log(\"Notifications: \" + notifications);\n        console.log(\"Dark Mode: \" + darkMode);\n        console.log(\"Language: \" + language);\n        settingsModal.style.display = \"none\";\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"settingsModal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-contentSettings\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-settings\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"notifications\",\n          children: \"Enable Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"notifications\",\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"privacy\",\n          children: \"Set as private page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"darkMode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"language\",\n          children: \"Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"language\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"en\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"es\",\n            children: \"Arabic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fr\",\n            children: \"Turkish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-settings\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsModal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SettingsModal;\nexport default SettingsModal;\nvar _c;\n$RefreshReg$(_c, \"SettingsModal\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","SettingsModal","_s","settingsModal","document","getElementById","gearIcon","querySelector","closeSettingsBtn","saveSettingsBtn","addEventListener","style","display","window","e","target","notifications","checked","darkMode","language","value","console","log","removeEventListener","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","defaultChecked","_c","$RefreshReg$"],"sources":["C:/Users/user/11am-grp1-repo/aura/src/components/SettingsModal.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport '../pages/styles/profile.css';\r\n\r\nconst SettingsModal = () => {\r\n  useEffect(() => {\r\n    const settingsModal = document.getElementById(\"settingsModal\");\r\n    const gearIcon = document.querySelector(\".fa-gear\");\r\n    const closeSettingsBtn = document.querySelector(\".close-settings\");\r\n    const saveSettingsBtn = document.querySelector(\".save-settings\");\r\n\r\n    // Open modal when gear icon is clicked\r\n    if (gearIcon) {\r\n      gearIcon.addEventListener(\"click\", () => {\r\n        settingsModal.style.display = \"flex\";\r\n      });\r\n    }\r\n\r\n    // Close modal when close button is clicked\r\n    if (closeSettingsBtn) {\r\n      closeSettingsBtn.addEventListener(\"click\", () => {\r\n        settingsModal.style.display = \"none\";\r\n      });\r\n    }\r\n\r\n    // Close modal when clicking outside\r\n    window.addEventListener(\"click\", (e) => {\r\n      if (e.target === settingsModal) {\r\n        settingsModal.style.display = \"none\";\r\n      }\r\n    });\r\n\r\n    // Save settings\r\n    if (saveSettingsBtn) {\r\n      saveSettingsBtn.addEventListener(\"click\", () => {\r\n        const notifications = document.getElementById(\"notifications\").checked;\r\n        const darkMode = document.getElementById(\"darkMode\").checked;\r\n        const language = document.getElementById(\"language\").value;\r\n\r\n        console.log(\"Settings saved:\");\r\n        console.log(\"Notifications: \" + notifications);\r\n        console.log(\"Dark Mode: \" + darkMode);\r\n        console.log(\"Language: \" + language);\r\n\r\n        settingsModal.style.display = \"none\";\r\n      });\r\n    }\r\n\r\n    // Cleanup event listeners when the component unmounts\r\n    return () => {\r\n      if (gearIcon) gearIcon.removeEventListener(\"click\", () => settingsModal.style.display = \"flex\");\r\n      if (closeSettingsBtn) closeSettingsBtn.removeEventListener(\"click\", () => settingsModal.style.display = \"none\");\r\n      window.removeEventListener(\"click\", (e) => {\r\n        if (e.target === settingsModal) {\r\n          settingsModal.style.display = \"none\";\r\n        }\r\n      });\r\n      if (saveSettingsBtn) saveSettingsBtn.removeEventListener(\"click\", () => {\r\n        const notifications = document.getElementById(\"notifications\").checked;\r\n        const darkMode = document.getElementById(\"darkMode\").checked;\r\n        const language = document.getElementById(\"language\").value;\r\n\r\n        console.log(\"Settings saved:\");\r\n        console.log(\"Notifications: \" + notifications);\r\n        console.log(\"Dark Mode: \" + darkMode);\r\n        console.log(\"Language: \" + language);\r\n\r\n        settingsModal.style.display = \"none\";\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"settingsModal\">\r\n      <div className=\"modal-contentSettings\">\r\n        <span className=\"close-settings\">&times;</span>\r\n        <h3>Settings</h3>\r\n        <div className=\"settings-option\">\r\n          <label htmlFor=\"notifications\">Enable Notifications</label>\r\n          <input type=\"checkbox\" id=\"notifications\" defaultChecked />\r\n        </div>\r\n        <div className=\"settings-option\">\r\n          <label htmlFor=\"privacy\">Set as private page</label>\r\n          <input type=\"checkbox\" id=\"darkMode\" />\r\n        </div>\r\n        <div className=\"settings-option\">\r\n          <label htmlFor=\"language\">Language</label>\r\n          <select id=\"language\">\r\n            <option value=\"en\">English</option>\r\n            <option value=\"es\">Arabic</option>\r\n            <option value=\"fr\">Turkish</option>\r\n          </select>\r\n        </div>\r\n        <button className=\"save-settings\">Save</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}